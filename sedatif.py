# coding: utf-8


import map
import hero
import constants
import random

class Sedatif():

    def __init__(self):
        self.structuremap.Map.structure
        self.free_paths = [(0, 3), (0, 6), (1, 0), (1, 3), (1, 5), (1, 6), (1, 7), (1, 8), (1, 9), (1, 12), (2, 0), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (2, 9), (2, 12), (3, 2), (3, 4), (3, 8), (3, 9), (3, 10), (3, 11), (3, 12), (3, 13), (4, 0), (4, 1), (4, 2), (4, 4), (4, 11), (5, 2), (5, 7), (5, 8), (5, 11), (5, 12), (5, 13), (6, 2), (6, 7), (7, 2), (7, 3), (7, 4), (7, 5), (7, 6), (7, 7), (7, 8), (8, 2), (8, 7), (8, 11), (8, 12), (8, 13), (9, 1), (9, 2), (9, 3), (9, 6), (9, 8), (9, 12), (10, 5), (10, 7), (10, 8), (10, 9), (10, 10), (10, 11), (10, 13), (11, 1), (11, 3), (11, 4), (11, 5), (11, 13), (12, 1), (12, 3), (12, 5), (12, 6), (12, 7), (12, 8), (12, 9), (12, 10), (12, 11), (12, 12), (12, 13), (13, 1), (13, 2), (13, 3), (14, 3), (14, 4), (14, 5), (14, 6), (14, 7), (14, 8), (14, 9), (14, 10), (14, 11), (14, 12), (14, 13)]#map.Map.free_paths
        self.random_pos = []
    
    
    def get_random_pos(self):
        
        self.random_pos = random.sample(self.free_paths, 3)

    def disperse_items(self):
        
        self.structure[self.random_pos[0][0]][self.random_pos[0][1]] = "t"  #constants.TUBE 
        self.structure[self.random_pos[1][0]][self.random_pos[1][1]] = "s"  #constants.STING
        self.structure[self.random_pos[2][0]][self.random_pos[2][1]] = "e"  #constants.ETHER



    




def main():
    piqure = Sedatif()
    print(piqure.free_paths)
    piqure.get_random_pos()
    print(piqure.random_pos)
    piqure.disperse_items()
    print(piqure.random_pos[1][0])
    print(piqure.random_pos[1][1])
    for l in piqure.structure:
        print(l)


if __name__ == "__main__":
    main()

    
